{"version":3,"file":"static/js/519.00b44324.chunk.js","mappings":"6OAgBaA,GAAsBC,EAAAA,EAAAA,GAA8B,CAACC,KAAM,wBAArCD,EATmC,SAACE,GACrE,OACE,kBAAMC,SAAUD,EAAME,aAAtB,WACE,SAACC,EAAA,EAAD,CAAOC,UAAU,WAAWC,KAAK,iBAAiBC,YAAY,wBAE1D,0BAAK,6C,UCXf,GAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,yBCoBvG,EAXmB,SAACN,GAClB,IAAIO,EAAK,mBAAeP,EAAMQ,IAC9B,OACE,gBAAKC,UAAS,UAAKC,EAAAA,QAAL,OAAsBA,EAAAA,QAApC,UACE,UAAC,KAAD,CAASC,GAAIJ,EAAb,cAAsBP,EAAMK,WCblC,EAA0B,yBCa1B,EANgB,SAACL,GAAD,OAA2B,gBAAKS,UAAWC,EAAhB,SAAkCV,EAAMY,WCkCnF,EA3BgB,SAACZ,GACf,IAAMa,EAAQb,EAAMc,YAEhBC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAE,SAAC,EAAD,CAAYb,KAAMa,EAAEb,KAAiBG,GAAIU,EAAEV,IAAZU,EAAEV,OACxEW,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAST,QAASS,EAAET,SAAaS,EAAEb,OAOpF,OAAKR,EAAMsB,QAGP,iBAAKb,UAAWc,EAAAA,QAAhB,WACE,gBAAKd,UAAWc,EAAAA,aAAhB,SACGR,KAGH,iBAAKN,UAAWc,EAAAA,QAAhB,WACE,yBAAMJ,KACN,SAACtB,EAAD,CAAqBI,SAdP,SAACuB,GACnBxB,EAAMyB,YAAYD,EAAOE,0BAGH,SAAC,KAAD,CAAUf,GAAI,YCWxC,GAAegB,EAAAA,EAAAA,KAAuBC,EAAAA,EAAAA,KAlBhB,SAACf,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAKC,SAACe,GACvB,MAAO,CACFJ,YAAa,SAACC,GACfG,GAASC,EAAAA,EAAAA,GAAcJ,SAQ7B,CAAoFK","sources":["components/Dialogs/AddMessageForm/AddMessageFormRedux.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\n\r\n\r\ntype AddMessageFormType={\r\n\r\n}\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>>=(props:any)=>{\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component='textarea' name='newMessageBody' placeholder='Enter your message'/>\r\n         \r\n          <div><button >Send</button></div>\r\n        </form> \r\n  )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<AddMessageFormType>({form: 'dialogAddMessageForm'}) (AddMessageForm)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__8+URS\",\"dialogsItem\":\"Dialogs_dialogsItem__owfsR\",\"active\":\"Dialogs_active__R3amW\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css'\r\n\r\ntype DialogItemPropsType = {\r\n  name: string\r\n  id: number\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n  let patsh = `/dialogs/${props.id}`;\r\n  return (\r\n    <div className={`${classes.dialog}${classes.active}`}>\r\n      <NavLink to={patsh}> {props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__mArtc\"};","import React from 'react';\r\nimport classes from './Message.module.css'\r\n\r\n\r\ntype MessagePropsType ={\r\n  message: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType)=><div className={classes.message}>{props.message}</div>\r\n \r\n\r\n\r\n\r\n\r\nexport default Message;","import React  from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { InitialDialogsPageType } from '../../redux/dialogs-reducer';\r\nimport { AddMessageFormRedux } from './AddMessageForm/AddMessageFormRedux';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport style from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\ntype DialogsPropsType = {\r\n  dialogsPage: InitialDialogsPageType\r\n  isAuth: boolean\r\n  sendMessage: (newMessageBody:string) => void\r\n}\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n  const state = props.dialogsPage\r\n\r\n  let dialogsElements = state.dialogs.map(d=><DialogItem name={d.name} key={d.id} id={d.id} />);\r\n  let messagesElements = state.messages.map(m => <Message message={m.message}key={m.id}/>);\r\n \r\n\r\n  let addNewMessage = (values:any) => {\r\n    props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\nif (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogsItems}>\r\n        {dialogsElements}\r\n\r\n      </div>\r\n      <div className={style.message}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import { compose, Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { InitialDialogsPageType, sendMessageAC } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { ComponentType } from 'react';\r\n\r\n\r\ntype mapStateToPropsType = {\r\n  dialogsPage: InitialDialogsPageType\r\n \r\n \r\n}\r\ntype mapDispachToPropsType = {\r\n   sendMessage: (newMessageBody:string) => void\r\n}\r\nexport type DialogsType = mapStateToPropsType & mapDispachToPropsType\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n   \r\n  }\r\n}\r\n\r\nlet mapDispachToProps = (dispatch: Dispatch): mapDispachToPropsType => {\r\n  return {\r\n       sendMessage: (newMessageBody:string) => {\r\n      dispatch(sendMessageAC(newMessageBody))\r\n    }\r\n   \r\n  }\r\n}\r\n\r\n\r\n//export const DialogsContainer = connect(mapStateToProps, mapDispachToProps)(Dialogs)\r\nexport default compose<ComponentType>(connect(mapStateToProps,  mapDispachToProps))(Dialogs)\r\n\r\n"],"names":["AddMessageFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","name","placeholder","patsh","id","className","classes","to","message","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","style","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageAC","Dialogs"],"sourceRoot":""}